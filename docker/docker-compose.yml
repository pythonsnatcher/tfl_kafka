version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper

  tube_producer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: unless-stopped
    command: python producer.py    # tube producer script

  bus_producer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    restart: unless-stopped
    command: python bus_producer.py   # bus producer script

  tube_consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.consumer
    volumes:
      - ./data:/app/data
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped
    command: python consumer.py   # tube consumer script

  bus_consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile.consumer
    volumes:
      - ./data:/app/data
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    depends_on:
      - kafka
    restart: unless-stopped
    command: python bus_consumer.py   # bus consumer script
